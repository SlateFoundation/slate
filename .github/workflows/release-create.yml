name: 'Release: Create'

on:
  pull_request:
    branches: ['releases/v*']
    types: [closed]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release-create:

    if: github.event.pull_request.merged == true # only run on PR merge
    runs-on: ubuntu-latest
    steps:

    - name: Grab PR Title
      run: |
        set -e

        PR_TITLE=$(jq -r ".pull_request.title" $GITHUB_EVENT_PATH)
        PR_BODY=$(jq -r ".pull_request.body" $GITHUB_EVENT_PATH)
        RELEASE_TAG=$(echo "${PR_TITLE}" | grep -oP "(?<=^Release: )v\d+\.\d+\.\d+(-rc\.\d+)?$")

        if [[ "${RELEASE_TAG}" =~ -rc\.[0-9]+$ ]]; then
          RELEASE_PRERELEASE=true
        else
          RELEASE_PRERELEASE=false
        fi

        echo "PR_TITLE=${PR_TITLE}" >> $GITHUB_ENV
        echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
        echo "RELEASE_PRERELEASE=${RELEASE_PRERELEASE}" >> $GITHUB_ENV

        echo 'PR_BODY<<END_OF_PR_BODY' >> $GITHUB_ENV
        echo "${PR_BODY}" >> $GITHUB_ENV
        echo 'END_OF_PR_BODY' >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: '${{ env.RELEASE_TAG }}'
        release_name: '${{ env.RELEASE_TAG }}'
        body: '${{ env.PR_BODY }}'
        draft: false
        prerelease: ${{ env.RELEASE_PRERELEASE }}
